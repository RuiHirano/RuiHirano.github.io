{"version":3,"sources":["webpack:///./src/pages/contact.tsx","webpack:///./node_modules/@material-ui/styles/esm/styled/styled.js","webpack:///./node_modules/@material-ui/core/esm/styles/styled.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["Wrapper","styled","paddingLeft","paddingRight","Title","Typography","fontSize","fontWeight","paddingTop","paddingBottom","ContactPage","title","description","location","omit","input","fields","output","Object","keys","forEach","prop","indexOf","Component","componentCreator","style","options","arguments","length","undefined","name","stylesOptions","filterProps","classNamePrefix","stylesOrCreator","theme","root","props","useStyles","makeStyles","displayName","propTypes","StyledComponent","forwardRef","ref","children","classNameProp","className","clone","ComponentProp","component","other","classes","spread","cloneElement","FinalComponent","createElement","defaultTheme","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","concat","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"mappings":"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","file":"component---src-pages-contact-tsx-6d57179c4a6d4ba16ee0.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Layout, SEO } from 'components/common';\nimport { Header } from 'components/theme';\nimport { styled } from '@material-ui/core/styles';\nimport { Contact } from 'components/landing';\n\nconst Wrapper = styled('div')({\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\"\n});\n\nconst Title = styled(Typography)({\n    fontSize: 30,\n    fontWeight: 'bold',\n    paddingTop: 10,\n    paddingBottom: 10\n});\n\n\nconst ContactPage: React.FC = () => {\n    return (\n        <Layout>\n            <SEO title=\"Contact\" description=\"\" location=\"/about\" />\n            <Header />\n            <Wrapper>\n                <Title>Contact</Title>\n                <Contact />\n            </Wrapper>\n        </Layout>\n    )\n}\n\nexport default ContactPage","import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  var componentCreator = function componentCreator(style) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"name\"]);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var stylesOrCreator = typeof style === 'function' ? function (theme) {\n      return {\n        root: function root(props) {\n          return style(_extends({\n            theme: theme\n          }, props));\n        }\n      };\n    } : {\n      root: style\n    };\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var filterProps;\n    var propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    var StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      var children = props.children,\n          classNameProp = props.className,\n          clone = props.clone,\n          ComponentProp = props.component,\n          other = _objectWithoutProperties(props, [\"children\", \"className\", \"clone\", \"component\"]);\n\n      var classes = useStyles(props);\n      var className = clsx(classes.root, classNameProp);\n      var spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className: className\n        }, spread));\n      }\n\n      var FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/React.createElement(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread), children);\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, function (props) {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = \"Styled(\".concat(classNamePrefix, \")\");\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}