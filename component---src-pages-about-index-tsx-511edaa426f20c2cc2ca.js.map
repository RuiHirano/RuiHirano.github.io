{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/AppBar/AppBar.js","webpack:///./node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","webpack:///./node_modules/@material-ui/core/esm/styles/makeStyles.js","webpack:///./src/pages/components/header.tsx","webpack:///./src/pages/about/index.tsx","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["props","ref","classes","className","_props$color","color","_props$position","position","other","Paper","square","component","elevation","root","concat","capitalize","withStyles","theme","backgroundColorDefault","palette","type","grey","display","flexDirection","width","boxSizing","zIndex","appBar","flexShrink","positionFixed","top","left","right","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","backgroundColor","getContrastText","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorInherit","colorTransparent","name","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","variant","gutters","alignItems","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","stylesOrCreator","options","arguments","length","undefined","makeStyles","defaultTheme","Header","grow","MainDrawer","openDrawer","setOpenDrawer","app_bar","Button","onClick","toUserHome","Typography","title","noWrap","flexGrow","About","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","margin","typography","caption","button","overline","srOnly","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"mappings":"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","file":"component---src-pages-about-index-tsx-511edaa426f20c2cc2ca.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = /*#__PURE__*/React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import React, { useState } from \"react\";\nimport { AppBar, Toolbar, Typography, Button, Menu, MenuItem, Drawer, IconButton, InputBase, List, ListItem, ListItemText, ListItemIcon, Divider } from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nconst Header: React.FC = () =>{\n\nreturn (\n    <div className={classes.grow}>\n\n            <MainDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer} />\n            <AppBar position=\"static\" className={classes.app_bar}>\n                <Toolbar>\n                    <Button onClick={toUserHome}>\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\n                            Rui Hirano\n                        </Typography>\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n)\n}\nexport default Header\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'none',\n        color: 'black',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    app_bar: {\n        backgroundColor: 'white'\n    },\n}));","import React, { useContext } from 'react';\nimport { Typography } from '@material-ui/core';\nimport Header from '../components/header'\n\nconst About: React.FC = () => {\n    return (\n        <div>\n        <Header/>\n            <Typography>about page</Typography>\n            <Typography>about page</Typography>\n        </div>\n    )\n}\n\nexport default About","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}