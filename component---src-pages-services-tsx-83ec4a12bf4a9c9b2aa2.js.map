{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./src/assets/services/covid19_rader_for_japan_api.png","webpack:///./node_modules/react-intl/lib/src/components/useIntl.js","webpack:///./src/pages/services.tsx","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/assets/services/trading_manager.png"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","module","exports","useIntl","intl","Wrapper","styled","paddingLeft","paddingRight","Title","Typography","fontSize","fontWeight","paddingTop","paddingBottom","Services","content","services","description","formatMessage","id","url","imgsrc","TradingManagerImg","Covid19APIImg","title","location","map","service","index","item","xl","lg","md","sm","xs","src","container","spacing","style","CardContent","_props$component","component","Component","padding"],"mappings":"8FAAA,wFAaIA,EAAoB,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoB,gBAAoB,IAAO,YAAS,CACtDG,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BK,UAAWH,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BU,gBA9CK,CAElBC,KAAM,CACJE,SAAU,WA2CoB,CAChCC,KAAM,WADO,CAEZX,I,uBCvDHY,EAAOC,QAAU,IAA0B,2E,kCCA3C,0EAGe,SAASC,IACtB,IAAIC,EAAO,aAAiB,KAE5B,OADA,YAAqBA,GACdA,I,sNCGHC,EAAUC,YAAO,MAAPA,CAAc,CAC1BC,YAAa,MACbC,aAAc,QAGZC,EAAQH,YAAOI,IAAPJ,CAAmB,CAC7BK,SAAU,GACVC,WAAY,OACZC,WAAY,GACZC,cAAe,KAiEJC,UArDY,WAEvB,IAiBUC,EAjBJZ,EAAOD,cACPc,EAAW,CACb,CACIjB,KAAM,kBACNkB,YAAad,EAAKe,cAAc,CAAEC,GAAI,gCACtCC,IAAK,wBACLC,OAAQC,KAEZ,CACIvB,KAAM,8BACNkB,YAAad,EAAKe,cAAc,CAAEC,GAAI,4CACtCC,IAAK,2DACLC,OAAQE,MA2BhB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,WAAWP,YAAY,GAAGQ,SAAS,cAC9C,kBAAC,IAAD,MACA,kBAACrB,EAAD,KACI,kBAACI,EAAD,kBA3BFO,EAAUC,EAASU,KAAI,SAACC,EAASC,GACnC,OACI,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACxC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,4BAAKP,EAAQ5B,MACb,yBACIoC,IAAKR,EAAQN,SAEjB,2BAAIM,EAAQV,mBAO5B,kBAAC,IAAD,CAAMmB,WAAS,EAACC,QAAS,EAAGC,MAAO,CAAE1B,WAAY,KAC5CG,Q,oCClEjB,4EAeIwB,EAA2B,cAAiB,SAAqBlD,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBgD,EAAmBnD,EAAMoD,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClD7C,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB,gBAAoBqD,EAAW,YAAS,CAC1DlD,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BF,IAAKA,GACJK,OAgCU,gBAnDK,CAElBC,KAAM,CACJ+C,QAAS,GACT,eAAgB,CACd9B,cAAe,MA8Ca,CAChCd,KAAM,kBADO,CAEZwC,I,qBC3DHvC,EAAOC,QAAU,IAA0B","file":"component---src-pages-services-tsx-83ec4a12bf4a9c9b2aa2.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","module.exports = __webpack_public_path__ + \"static/covid19_rader_for_japan_api-299eea96560d3e56298a8b7a554a5717.png\";","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n  var intl = React.useContext(Context);\n  invariantIntlContext(intl);\n  return intl;\n}","import React, { useContext } from 'react';\nimport { Typography, Card, CardContent, Grid } from '@material-ui/core';\nimport { Layout, SEO } from 'components/common';\nimport { Header } from 'components/theme';\nimport { styled } from '@material-ui/core/styles';\nimport { useIntl } from \"react-intl\";\nimport TradingManagerImg from '../assets/services/trading_manager.png'\nimport Covid19APIImg from '../assets/services/covid19_rader_for_japan_api.png'\n\nconst Wrapper = styled('div')({\n    paddingLeft: \"15%\",\n    paddingRight: \"15%\"\n});\n\nconst Title = styled(Typography)({\n    fontSize: 30,\n    fontWeight: 'bold',\n    paddingTop: 10,\n    paddingBottom: 10\n});\n\n\n\n/*const Title: React.FC = () => {\n    return (\n        <Typography style={{ fontSize: 30, fontWeight: 'bold' }}>Services</Typography>\n    )\n}*/\n\n\nconst Services: React.FC = () => {\n\n    const intl = useIntl()\n    const services = [\n        {\n            name: \"Trading Manager\",\n            description: intl.formatMessage({ id: \"trading_manager_description\" }),\n            url: 'http://ruihirano.info',\n            imgsrc: TradingManagerImg,\n        },\n        {\n            name: \"Covid19 Rader for Japan API\",\n            description: intl.formatMessage({ id: \"covid19_rader_for_japan_api_description\" }),\n            url: 'https://github.com/RuiHirano/covid19-rader-for-japan-api',\n            imgsrc: Covid19APIImg,\n        },\n    ]\n\n    const renderServiceList = () => {\n        const content = services.map((service, index) => {\n            return (\n                <Grid item xl={4} lg={4} md={4} sm={12} xs={12}>\n                    <Card>\n                        <CardContent>\n                            <h4>{service.name}</h4>\n                            <img\n                                src={service.imgsrc}\n                            />\n                            <p>{service.description}</p>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            )\n        })\n        return (\n            <Grid container spacing={5} style={{ paddingTop: 30 }}>\n                {content}\n            </Grid>\n        )\n    }\n\n    return (\n        <Layout>\n            <SEO title=\"Services\" description=\"\" location=\"/services\" />\n            <Header />\n            <Wrapper>\n                <Title >Services</Title>\n                {renderServiceList()}\n            </Wrapper>\n        </Layout>\n    )\n}\n\nexport default Services","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","module.exports = __webpack_public_path__ + \"static/trading_manager-03d2a8133c95e149b6c30f5c42313f3e.png\";"],"sourceRoot":""}